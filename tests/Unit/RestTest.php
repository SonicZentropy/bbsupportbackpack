<?php

namespace Tests\Unit;

use App\REST\Rest;
use Tests\TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class RestTest extends TestCase
{
    private static $rest;
    private static $token;

    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
        self::$rest = new Rest(true);
    }

    public function testRestCreation()
    {
        //$rest = new Rest(true);
        $this->assertFalse(self::$rest == null);
    }

    public function testRestAuthentication() {
        //$rest = new Rest(true);
        self::$token = self::$rest->authenticateREST()->access_token;
        $this->assertFalse(self::$token == null || self::$token == "");
    }

    public function testCreateDatasource() {
        $ds = self::$rest->createDatasource(self::$token, "TestDS", "Test data source");
        $this->assertFalse($ds == null);
        $this->assertFalse($ds == -1);
    }

    public function testGetDataSourceKeyIDFromName() {
        $id = self::$rest->GetDataSourceKeyIDFromName(self::$token, "TestDS");
        $this->assertNotEquals(-1, $id);

        $id = self::$rest->GetDataSourceKeyIDFromName(self::$token, "NonExistDS");
        $this->assertEquals(-1, $id);
    }

    public function testReadDatasource() {
        $id = self::$rest->GetDataSourceKeyIDFromName(self::$token, "TestDS");
        $ds = self::$rest->readDatasource(self::$token, $id);
        $this->assertFalse($ds->description == "BBDN-DSK-PHP");
    }

    // also deleteTerm, deleteCourse,deleteUser,deleteMembership,deleteEnrollment for FALSE
    public function testDeleteDatasource() {

        $returnValue = FALSE; //Change this later
        $this->assertTrue($returnValue);
    }
}